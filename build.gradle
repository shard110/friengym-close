plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

<<<<<<< HEAD
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
=======
group = 'org.example'
version = '0.0.1-SNAPSHOT'
>>>>>>> temp-branch

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
<<<<<<< HEAD
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'mysql:mysql-connector-java:8.0.30'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // 스프링 부트 재부팅
    developmentOnly 'org.springframework.boot:spring-boot-devtools' 

    // Lombok
    implementation 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

=======
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
    // Lombok (compile-time code generation)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    
    // MySQL JDBC Driver
    runtimeOnly 'mysql:mysql-connector-java:8.0.32'
    
    // Thymeleaf extras
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'

    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

>>>>>>> temp-branch
    // JWT 라이브러리 추가
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
<<<<<<< HEAD

=======
>>>>>>> temp-branch
}

tasks.named('test') {
    useJUnitPlatform()
}
<<<<<<< HEAD
=======

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}
>>>>>>> temp-branch
